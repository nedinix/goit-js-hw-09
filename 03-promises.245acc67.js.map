{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAGzBC,EAAgB,CACpBC,SAAS,GAoBX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAiBT,SAAEA,EAAQC,MAAEA,IACpC,OAAOV,EAAAmB,OAAOC,QACZ,uBAAqBX,QAAiBC,MAAWJ,E,CAKrD,SAASe,GAAgBZ,SAAEA,EAAQC,MAAEA,IACnC,OAAOV,EAAAmB,OAAOG,QACZ,sBAAoBb,QAAeC,MAAWJ,E,CAvClDJ,EAAKC,KAAKoB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,GAAWzB,EAAKC,KAAKyB,SAC1C,IAAIC,EAAaC,OAAOpB,EAAMqB,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGL,GAAYM,KAAKjB,GAAkBkB,MAAMf,GAC1DQ,GAAcG,EAGhB9B,EAAKC,KAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nconst notifyOptions = {\n  useIcon: false,\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = refs.form.elements;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue).then(onResolvePromise).catch(onRejectPromise);\n    delayValue += stepValue;\n  }\n\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onResolvePromise({ position, delay }) {\n  return Notify.success(\n    `✅ Fulfilled promise ${position} in ${delay}ms`,\n    notifyOptions\n  );\n}\n\nfunction onRejectPromise({ position, delay }) {\n  return Notify.failure(\n    `❌ Rejected promise ${position} in ${delay}ms`,\n    notifyOptions\n  );\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$notifyOptions","useIcon","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onResolvePromise","Notify","success","$47d4ff9957288465$var$onRejectPromise","failure","addEventListener","e","preventDefault","step","amount","elements","delayValue","Number","value","stepValue","amountValue","i","then","catch","reset"],"version":3,"file":"03-promises.245acc67.js.map"}