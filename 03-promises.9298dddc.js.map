{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAGzBC,EAAgB,CACpBC,SAAS,GAiCX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAxCfR,EAAKC,KAAKc,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAQT,MAAAU,EAAKC,KAAEA,EAAIC,OAAEA,GAAWpB,EAAKC,KAAKoB,SAE1C,IAAIC,EAAaC,OAAOL,EAAMM,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCrB,EAAcqB,EAAGL,GACdM,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBV,EAAA+B,OAAOC,QACL,uBAAqBvB,QAAiBC,MAAWJ,EAC/C,IAGL2B,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBV,EAAA+B,OAAOG,QACL,sBAAoBzB,QAAeC,MAAWJ,EAC9C,IAGNkB,GAAcG,EAGhBzB,EAAKC,KAAKgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nconst notifyOptions = {\n  useIcon: false,\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = refs.form.elements;\n\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          notifyOptions\n        );\n      });\n    delayValue += stepValue;\n  }\n\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$notifyOptions","useIcon","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","elements","delayValue","Number","value","stepValue","amountValue","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.9298dddc.js.map"}