{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAGzBC,EAAgB,CACpBC,SAAS,GAoBX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAiBC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACpC,OAAOV,EAAAoB,OAAOC,QACZ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAC5CJ,E,CAIN,SAASiB,EAAgBJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MACnC,OAAOV,EAAAoB,OAAOI,QACZ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,MAC3CJ,E,CAxCJJ,EAAKC,KAAKsB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMF,IALA,IAAgCC,EAAA1B,EAAKC,KAAK0B,SAAlCnB,EAAwBkB,EAAxBlB,MAAOoB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACjBC,EAAaC,OAAOvB,EAAMwB,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC7B,EAAc6B,EAAGL,GAAYM,KAAKpB,GAAkBqB,MAAMhB,GAC1DS,GAAcG,EAGhBjC,EAAKC,KAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nconst notifyOptions = {\n  useIcon: false,\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  const { delay, step, amount } = refs.form.elements;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue).then(onResolvePromise).catch(onRejectPromise);\n    delayValue += stepValue;\n  }\n\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onResolvePromise({ position, delay }) {\n  return Notify.success(\n    `✅ Fulfilled promise ${position} in ${delay}ms`,\n    notifyOptions\n  );\n}\n\nfunction onRejectPromise({ position, delay }) {\n  return Notify.failure(\n    `❌ Rejected promise ${position} in ${delay}ms`,\n    notifyOptions\n  );\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$notifyOptions","useIcon","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolvePromise","param","Notify","success","concat","$ce04d3a99e08e73b$var$onRejectPromise","failure","addEventListener","e","preventDefault","_elements","elements","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","catch","reset"],"version":3,"file":"03-promises.add519b9.js.map"}